on:
  rss:
    url: https://www.vaticannews.va/de.rss.xml
    config:
      limit: 1
jobs:
#  mastodon:
#    name: post2mastodon
#    runs-on: ubuntu-latest
#    steps:
#      - name: send to munich
#        uses: actionsflow/axios@v1
#        with:
#          url: ${{ secrets.MASTODON_POST_URL }}
#          method: 'POST'
#          accept: 200,201,204
#          content-type: application/x-www-form-urlencoded
#          data: 'status=<<<${{on.rss.outputs.content}}>>> <<<${{on.rss.outputs.link}}>>>'
#          timeout: 10000
#          is_debug: false
#  mastodon2:
#    name: post2mastodon2
#    runs-on: ubuntu-latest
#    steps:
#      - name: send to bayern
#        uses: actionsflow/axios@v1
#        with:
#          url: ${{ secrets.MASTODON_POST_URL_2 }}
#          method: 'POST'
#          accept: 200,201,204
#          content-type: application/x-www-form-urlencoded
#          data: 'status=${{on.rss.outputs.content}} ${{on.rss.outputs.link}}'
#          timeout: 10000
#          is_debug: false
  test-new-mastodon:
    name: 'Perform REST API'
    runs-on: ubuntu-latest
    steps:
      - name: 'Call API'
        uses: actionsflow/axios@v1
        with:
          # The target URL
          # Required: true if custom-config is not set
          url: ${{ secrets.TEST_API_URL }}

          # The request method, basically it's one of GET|POST|PUT|PATCH
          # Default is GET 
          method: 'POST'

          # List of response status codes to be accepted, else it will set the job to be failed
          # If more than one value is needed, you can use comma(,) as seperator
          # In this case if the response status code is not one of 200, 201 and 204, the job will be failed
          # Default is 200,201,204
          accept: 200,201,204

          # Headers can be passed through json object string 
          # support escape string, use <<<${{env.TEST}}>>>
          headers: '{ "Content-Type": "application/json" }'

          # Content-Type Header value, if data is json string, then content-type default value is application/json
          content-type: application/json

          # Params can be passed through json object string 
          # support escape string, use <<<${{env.TEST}}>>>
          # params: '{ "status": "<<<${{on.rss.outputs.content}}>>> ${{on.rss.outputs.link}}", "visibility": "unlisted" }'

          # Body request
          # Apply only to POST|PUT request
          # support escape string, use <<<${{env.TEST}}>>>
          # data: '{ "status": "<<<${{on.rss.outputs.content}}>>> ${{on.rss.outputs.link}}", "visibility": "unlisted" }'
          data: '{ "status": "Testpost" }'

          # Request timeout (millisec)
          # default is `0` (no timeout)
          timeout: 10000

          # Basic authentication using username and password
          # This will override the Authorization header, for example Authorization: Basic QWxhZGRpbjpPcGVuU2VzYW1l
          # Format => username:password
          # basic-auth: ${{ secrets.curl_auth_username }}:${{ secrets.curl_auth_password }}

          # The authentication using token
          # This will override the Authorization header, for example Authorization: Bearer QWxhZGRpbjpPcGVuU2VzYW1l
          bearer-token: ${{ secrets.TEST_API_TOKEN }}

          # If you want to use proxy with the request, you can use proxy-url
          # Format => host:port
          # proxy-url: https://proxy-url:3000

          # If the proxy host requires the authentication, you can use proxy-auth to pass credentials 
          # Format => username:password
          # proxy-auth: ${{ secrets.proxy_auth_username }}:${{ secrets.proxy_auth_password }}

          # If it is set to true, it will show the response log in the Github UI
          # Default: false
          is_debug: true

          # If you want to use axios config directly, you can pass config file to the action
          # The file is just basically a json file that has the same format as axios config https://github.com/axios/axios#request-config
          # If this input is set, it will ignore other inputs that related to the config
          # The path file is start from root directory of the repo
          # custom-config: .github/workflows/curl-config.json          
  tweet:
    runs-on: ubuntu-latest
    steps:
      - uses: ethomson/send-tweet-action@v1
        with:
          status: "${{on.rss.outputs.title}} ${{on.rss.outputs.link}}"
          consumer-key: ${{ secrets.TWITTER_CONSUMER_KEY }}
          consumer-secret: ${{ secrets.TWITTER_CONSUMER_SECRET }}
          access-token: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          access-token-secret: ${{ secrets.TWITTER_ACCESS_SECRET }}
